{
  "swagger": "2.0",
  "basePath": "/",
  "paths": {
    "/apn/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new APN",
        "operationId": "Create APN Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/APN%20JSON"
            }
          }
        ],
        "tags": [
          "apn"
        ]
      }
    },
    "/apn/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all APNs",
        "operationId": "get_py_hss_oam__all_ap_ns",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "apn"
        ]
      }
    },
    "/apn/{apn_id}": {
      "parameters": [
        {
          "name": "apn_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update APN data for specified APN ID",
        "operationId": "Update APN Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/APN%20JSON"
            }
          }
        ],
        "tags": [
          "apn"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all APN data for specified APN ID",
        "operationId": "delete_py_hss_apn__get",
        "tags": [
          "apn"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all APN data for specified APN ID",
        "operationId": "get_py_hss_apn__get",
        "tags": [
          "apn"
        ]
      }
    },
    "/auc/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new AUC",
        "operationId": "Create AUC Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AUC%20JSON"
            }
          }
        ],
        "tags": [
          "auc"
        ]
      }
    },
    "/auc/aka/vector_count/{vector_count}/imsi/{imsi}": {
      "parameters": [
        {
          "name": "vector_count",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get AKA vectors for specified IMSI and PLMN",
        "operationId": "get_py_hss_auc__get_aka__vectors",
        "tags": [
          "auc"
        ]
      }
    },
    "/auc/eap_aka/plmn/{plmn}/imsi/{imsi}": {
      "parameters": [
        {
          "name": "plmn",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get EAP-AKA vectors for specified IMSI and PLMN",
        "operationId": "get_py_hss_auc__get_eap_aka__vectors",
        "tags": [
          "auc"
        ]
      }
    },
    "/auc/iccid/{iccid}": {
      "parameters": [
        {
          "name": "iccid",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all AuC data for specified ICCID",
        "operationId": "get_py_hss_auc__get_iccid",
        "tags": [
          "auc"
        ]
      }
    },
    "/auc/imsi/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all AuC data for specified IMSI",
        "operationId": "get_py_hss_auc__get_imsi",
        "tags": [
          "auc"
        ]
      }
    },
    "/auc/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all AuC Data (except keys)",
        "operationId": "get_py_hss_auc__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "auc"
        ]
      }
    },
    "/auc/{auc_id}": {
      "parameters": [
        {
          "name": "auc_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update AuC data for specified AuC ID",
        "operationId": "Update AUC Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AUC%20JSON"
            }
          }
        ],
        "tags": [
          "auc"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all AUC data for specified AUC ID",
        "operationId": "delete_py_hss_auc__get",
        "tags": [
          "auc"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all AuC data for specified AuC ID",
        "operationId": "get_py_hss_auc__get",
        "tags": [
          "auc"
        ]
      }
    },
    "/charging_rule/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new ChargingRule",
        "operationId": "Create ChargingRule Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CHARGING_RULE%20JSON"
            }
          }
        ],
        "tags": [
          "charging_rule"
        ]
      }
    },
    "/charging_rule/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Charging Rules",
        "operationId": "get_py_hss__charging__rule__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "charging_rule"
        ]
      }
    },
    "/charging_rule/{charging_rule_id}": {
      "parameters": [
        {
          "name": "charging_rule_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update charging_rule_id data for specified charging_rule_id",
        "operationId": "Update charging_rule_id Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CHARGING_RULE%20JSON"
            }
          }
        ],
        "tags": [
          "charging_rule"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified charging_rule_id",
        "operationId": "delete_py_hss__charging__rule__get",
        "tags": [
          "charging_rule"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Charging Rule data for specified charging_rule_id",
        "operationId": "get_py_hss__charging__rule__get",
        "tags": [
          "charging_rule"
        ]
      }
    },
    "/eir/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new EIR Rule",
        "operationId": "Create EIR Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EIR%20JSON"
            }
          }
        ],
        "tags": [
          "eir"
        ]
      }
    },
    "/eir/eir_history/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get EIR history for all subscribers",
        "operationId": "get_py_hss_eir__all__history",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "eir"
        ]
      }
    },
    "/eir/eir_history/{attribute}": {
      "parameters": [
        {
          "name": "attribute",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get Delete for IMSI or IMEI",
        "operationId": "delete_py_hss_eir_history",
        "tags": [
          "eir"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get history for IMSI or IMEI",
        "operationId": "get_py_hss_eir_history",
        "tags": [
          "eir"
        ]
      }
    },
    "/eir/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all EIR Rules",
        "operationId": "get_py_hss_eir__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "eir"
        ]
      }
    },
    "/eir/lookup_imei/{imei}": {
      "parameters": [
        {
          "name": "imei",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get Device Info from IMEI",
        "operationId": "get_py_hss_eir_tac",
        "tags": [
          "eir"
        ]
      }
    },
    "/eir/{eir_id}": {
      "parameters": [
        {
          "name": "eir_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update eir_id data for specified eir_id",
        "operationId": "Update eir Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EIR%20JSON"
            }
          }
        ],
        "tags": [
          "eir"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified eir_data",
        "operationId": "delete_py_hss_eir__get",
        "tags": [
          "eir"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all EIR data for specified eir_id",
        "operationId": "get_py_hss_eir__get",
        "tags": [
          "eir"
        ]
      }
    },
    "/geored/": {
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get Geored data Pushed",
        "operationId": "Receive GeoRed data",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GeoRed"
            }
          }
        ],
        "tags": [
          "geored"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return the active geored schema",
        "operationId": "get_py_hss__geored",
        "tags": [
          "geored"
        ]
      }
    },
    "/geored/peers": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return the configured geored peers",
        "operationId": "get_py_hss__geored__peers",
        "tags": [
          "geored"
        ]
      }
    },
    "/geored/webhooks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return the configured geored webhooks",
        "operationId": "get_py_hss__geored__webhooks",
        "tags": [
          "geored"
        ]
      }
    },
    "/ims_subscriber/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new IMS SUBSCRIBER",
        "operationId": "Create IMS SUBSCRIBER Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IMS_SUBSCRIBER%20JSON"
            }
          }
        ],
        "tags": [
          "ims_subscriber"
        ]
      }
    },
    "/ims_subscriber/ims_subscriber_imsi/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get IMS data for imsi",
        "operationId": "get_py_hss_ims_subscriber_imsi",
        "tags": [
          "ims_subscriber"
        ]
      }
    },
    "/ims_subscriber/ims_subscriber_msisdn/{msisdn}": {
      "parameters": [
        {
          "name": "msisdn",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get IMS data for MSISDN",
        "operationId": "get_py_hss_ims_subscriber_msisdn",
        "tags": [
          "ims_subscriber"
        ]
      }
    },
    "/ims_subscriber/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all IMS Subscribers",
        "operationId": "get_py_hss_ims__subscriber__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "ims_subscriber"
        ]
      }
    },
    "/ims_subscriber/{ims_subscriber_id}": {
      "parameters": [
        {
          "name": "ims_subscriber_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update IMS SUBSCRIBER data for specified ims_subscriber",
        "operationId": "Update IMS SUBSCRIBER Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IMS_SUBSCRIBER%20JSON"
            }
          }
        ],
        "tags": [
          "ims_subscriber"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified ims_subscriber_id",
        "operationId": "delete_py_hss_ims_subscriber__get",
        "tags": [
          "ims_subscriber"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all SUBSCRIBER data for specified ims_subscriber_id",
        "operationId": "get_py_hss_ims_subscriber__get",
        "tags": [
          "ims_subscriber"
        ]
      }
    },
    "/oam/deregister/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Deregisters a given IMSI from the entire network",
        "operationId": "get_py_hss_oam__deregister",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/diameter_peers": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get active Diameter Peers",
        "operationId": "get_py_hss_oam__peers",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/ping": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Ping the API to check if it's alive",
        "operationId": "get_py_hss_oam__ping",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/reconcile/ims/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get current location of IMS Subscriber from all linked HSS nodes",
        "operationId": "get_py_hss_oam__reconcile_ims",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/rollback_operation/last": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Undo the last Insert/Update/Delete operation",
        "operationId": "get_py_hss_oam__rollback__last",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/rollback_operation/{operation_id}": {
      "parameters": [
        {
          "name": "operation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Undo the last Insert/Update/Delete operation for a given operation id",
        "operationId": "get_py_hss_oam__rollback__last__table",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/serving_subs": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Subscribers served by HSS",
        "operationId": "get_py_hss_oam__serving__subs",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/serving_subs_ims": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Subscribers served by IMS",
        "operationId": "get_py_hss_oam__serving__subs_ims",
        "tags": [
          "oam"
        ]
      }
    },
    "/oam/serving_subs_pcrf": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Subscribers served by PCRF",
        "operationId": "get_py_hss_oam__serving__subs_pcrf",
        "tags": [
          "oam"
        ]
      }
    },
    "/operation_logs/last": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get the most recent Operation Log",
        "operationId": "get_py_hss__operation__log__last",
        "tags": [
          "operation_logs"
        ]
      }
    },
    "/operation_logs/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Operation Logs",
        "operationId": "get_py_hss__operation__log__list",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "operation_logs"
        ]
      }
    },
    "/operation_logs/list/table/{table_name}": {
      "parameters": [
        {
          "name": "table_name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Operation Logs for a given table",
        "operationId": "get_py_hss__operation__log__list__table",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "operation_logs"
        ]
      }
    },
    "/pcrf/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Push predefined Charging Rule to Subscriber",
        "operationId": "Push Charging Rule to a Subscriber",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PCRF_Rule"
            }
          }
        ],
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/clr_subscriber": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Trigger CLR for a Subscriber",
        "operationId": "Trigger Cancel Location Request for a Subscriber",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PCRF_PCSCF_Restoration_Subscriber"
            }
          }
        ],
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/emergency_subscriber/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new EMERGENCY_SUBSCRIBER",
        "operationId": "Create EMERGENCY_SUBSCRIBER Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EMERGENCY_SUBSCRIBER%20JSON"
            }
          }
        ],
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/emergency_subscriber/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Emergency Subscribers",
        "operationId": "get_py_hss_all_emergency_subscriber",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/emergency_subscriber/{emergency_subscriber_id}": {
      "parameters": [
        {
          "name": "emergency_subscriber_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update emergency_subscriber data for specified emergency_subscriber ID",
        "operationId": "Update EMERGENCY_SUBSCRIBER Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EMERGENCY_SUBSCRIBER%20JSON"
            }
          }
        ],
        "tags": [
          "pcrf"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all emergency_subscriber data for specified emergency_subscriber ID",
        "operationId": "delete_py_hss_emergency_subscriber__get",
        "tags": [
          "pcrf"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all emergency_subscriber data for specified emergency_subscriber ID",
        "operationId": "get_py_hss_emergency_subscriber__get",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/pcrf_serving_apn_ip/{ip_address}": {
      "parameters": [
        {
          "name": "ip_address",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get Serving APN Data for an IP Address",
        "operationId": "get_py_hss_pcrf__get__serving_apn_ip",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/pcrf_subscriber/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get PCRF Data for all Subscribers",
        "operationId": "get_py_hss_pcrf__get__all__served__subscribers",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/pcrf_subscriber_imsi/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get PCRF Data for a Subscriber",
        "operationId": "get_py_hss_oam__get_pcrf__subscriber_all_apn",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/pcrf_subscriber_imsi/{imsi}/{apn_id}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "apn_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get PCRF data",
        "operationId": "get_py_hss_oam__get_pcrf__subscriber",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/pcscf_restoration": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Trigger PCSCF Restoration for all IMS Subscribers attached to PCSCF",
        "operationId": "Trigger PCSCF Restoration for all IMS Subscribers attached to PCSCF",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PCRF_PCSCF_Restoration"
            }
          }
        ],
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/pcscf_restoration_subscriber": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Trigger PCSCF Restoration for an IMS Subscriber",
        "operationId": "Trigger PCSCF Restoration for an IMS Subscriber",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PCRF_PCSCF_Restoration_Subscriber"
            }
          }
        ],
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/subscriber_routing/{subscriber_routing}": {
      "parameters": [
        {
          "name": "subscriber_routing",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get Subscriber info from Subscriber Routing",
        "operationId": "get_py_hss_pcrf_subscriber_routing",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/pcrf/{charging_rule_id}": {
      "parameters": [
        {
          "name": "charging_rule_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get full Charging Rule + TFTs",
        "operationId": "get_py_hss_pcrf__complete",
        "tags": [
          "pcrf"
        ]
      }
    },
    "/push/clr/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "Push CLR (Cancel Location Request) to MME",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CLR"
            }
          }
        ],
        "tags": [
          "push"
        ]
      }
    },
    "/roaming/network/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new Roaming Network",
        "operationId": "Create Roaming Network",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ROAMING_NETWORK%20JSON"
            }
          }
        ],
        "tags": [
          "roaming"
        ]
      }
    },
    "/roaming/network/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all roaming networks",
        "operationId": "get_py_hss_roaming_network__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "roaming"
        ]
      }
    },
    "/roaming/network/{roaming_network_id}": {
      "parameters": [
        {
          "name": "roaming_network_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update data for specified roaming_network_id",
        "operationId": "Update ROAMING_NETWORK Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ROAMING_NETWORK%20JSON"
            }
          }
        ],
        "tags": [
          "roaming"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified roaming_network_id",
        "operationId": "delete_py_hss_roaming_network__get",
        "tags": [
          "roaming"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all data for specified roaming_network_id",
        "operationId": "get_py_hss_roaming_network__get",
        "tags": [
          "roaming"
        ]
      }
    },
    "/roaming/rule/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new Roaming Rule",
        "operationId": "Create Roaming Rule",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ROAMING_RULE%20JSON"
            }
          }
        ],
        "tags": [
          "roaming"
        ]
      }
    },
    "/roaming/rule/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all roaming rules",
        "operationId": "get_py_hss_roaming_rule__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "roaming"
        ]
      }
    },
    "/roaming/rule/{roaming_rule_id}": {
      "parameters": [
        {
          "name": "roaming_rule_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update data for specified roaming_rule_id",
        "operationId": "Update ROAMING_RULE Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ROAMING_RULE%20JSON"
            }
          }
        ],
        "tags": [
          "roaming"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified roaming_rule_id",
        "operationId": "delete_py_hss_roaming_rule__get",
        "tags": [
          "roaming"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all data for specified roaming_rule_id",
        "operationId": "get_py_hss_roaming_rule__get",
        "tags": [
          "roaming"
        ]
      }
    },
    "/subscriber/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new SUBSCRIBER",
        "operationId": "Create SUBSCRIBER Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SUBSCRIBER%20JSON"
            }
          }
        ],
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/imsi/{imsi}": {
      "parameters": [
        {
          "name": "imsi",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get data for IMSI",
        "operationId": "get_py_hss_subscriber_imsi",
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Subscribers",
        "operationId": "get_py_hss_subscriber__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/msisdn/{msisdn}": {
      "parameters": [
        {
          "name": "msisdn",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get data for MSISDN",
        "operationId": "get_py_hss_subscriber_msisdn",
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/routing/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new Subscriber Routing Binding",
        "operationId": "Create Subscriber Routing Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SUBSCRIBER_ROUTING%20JSON"
            }
          }
        ],
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/routing/{subscriber_id}/{apn_id}": {
      "parameters": [
        {
          "name": "subscriber_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "apn_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete Subscriber Routing binding for specified subscriber_id & apn_id",
        "operationId": "delete_py_hss_subscriber_subscriber_routing",
        "tags": [
          "subscriber"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get Subscriber Routing for specified subscriber_id & apn_id",
        "operationId": "get_py_hss_subscriber_subscriber_routing",
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/routing/{subscriber_routing_id}": {
      "parameters": [
        {
          "name": "subscriber_routing_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update SUBSCRIBER data for specified subscriber_routing_id",
        "operationId": "Update SUBSCRIBER_ROUTING Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SUBSCRIBER_ROUTING%20JSON"
            }
          }
        ],
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber/{subscriber_id}": {
      "parameters": [
        {
          "name": "subscriber_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update SUBSCRIBER data for specified subscriber_id",
        "operationId": "Update SUBSCRIBER Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SUBSCRIBER%20JSON"
            }
          }
        ],
        "tags": [
          "subscriber"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified subscriber_id",
        "operationId": "delete_py_hss_subscriber__get",
        "tags": [
          "subscriber"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all SUBSCRIBER data for specified subscriber_id",
        "operationId": "get_py_hss_subscriber__get",
        "tags": [
          "subscriber"
        ]
      }
    },
    "/subscriber_attributes/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new Attribute for Subscriber",
        "operationId": "Create Attribute Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SUBSCRIBER_ATTRIBUTES%20JSON"
            }
          }
        ],
        "tags": [
          "subscriber_attributes"
        ]
      }
    },
    "/subscriber_attributes/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all Subscriber Attributes",
        "operationId": "get_py_hss__subscriber__attributes__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "subscriber_attributes"
        ]
      }
    },
    "/subscriber_attributes/{subscriber_attributes_id}": {
      "parameters": [
        {
          "name": "subscriber_attributes_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update data for specified attribute ID",
        "operationId": "Update Attribute Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SUBSCRIBER_ATTRIBUTES%20JSON"
            }
          }
        ],
        "tags": [
          "subscriber_attributes"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete specified attribute ID",
        "operationId": "delete_py_hss__attributes__get",
        "tags": [
          "subscriber_attributes"
        ]
      }
    },
    "/subscriber_attributes/{subscriber_id}": {
      "parameters": [
        {
          "name": "subscriber_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all attributes / values for specified Subscriber ID",
        "operationId": "get_py_hss__attributes__get",
        "tags": [
          "subscriber_attributes"
        ]
      }
    },
    "/tft/": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Create new TFT",
        "operationId": "Create TFT Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TFT%20JSON"
            }
          }
        ],
        "tags": [
          "tft"
        ]
      }
    },
    "/tft/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all TFTs",
        "operationId": "get_py_hss_tft__all",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination",
            "default": 0
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page for pagination",
            "default": 200
          }
        ],
        "tags": [
          "tft"
        ]
      }
    },
    "/tft/{tft_id}": {
      "parameters": [
        {
          "name": "tft_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Update tft_id data for specified tft_id",
        "operationId": "Update IMS tft_id Object",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TFT%20JSON"
            }
          }
        ],
        "tags": [
          "tft"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete all data for specified tft_id",
        "operationId": "delete_py_hss_tft__get",
        "tags": [
          "tft"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Get all TFT data for specified tft_id",
        "operationId": "get_py_hss_tft__get",
        "tags": [
          "tft"
        ]
      }
    }
  },
  "info": {
    "title": "volte-test - volte - PyHSS OAM API",
    "version": "1.0",
    "description": "Restful API for working with PyHSS"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "apn",
      "description": "PyHSS APN Functions"
    },
    {
      "name": "auc",
      "description": "PyHSS AUC Functions"
    },
    {
      "name": "subscriber",
      "description": "PyHSS SUBSCRIBER Functions"
    },
    {
      "name": "ims_subscriber",
      "description": "PyHSS IMS SUBSCRIBER Functions"
    },
    {
      "name": "tft",
      "description": "PyHSS TFT Functions"
    },
    {
      "name": "charging_rule",
      "description": "PyHSS Charging Rule Functions"
    },
    {
      "name": "eir",
      "description": "PyHSS PyHSS Equipment Identity Register"
    },
    {
      "name": "subscriber_attributes",
      "description": "PyHSS Subscriber Attributes"
    },
    {
      "name": "operation_logs",
      "description": "PyHSS Operation Logs"
    },
    {
      "name": "oam",
      "description": "PyHSS OAM Functions"
    },
    {
      "name": "pcrf",
      "description": "PyHSS PCRF Dynamic Functions"
    },
    {
      "name": "geored",
      "description": "PyHSS GeoRedundancy Functions"
    },
    {
      "name": "push",
      "description": "PyHSS Push Async Diameter Command"
    },
    {
      "name": "roaming",
      "description": "PyHSS Roaming Functions"
    }
  ],
  "definitions": {
    "APN JSON": {
      "type": "object",
      "title": "APN",
      "properties": {
        "apn_id": {
          "type": "integer",
          "description": "Unique ID of APN"
        },
        "apn": {
          "type": "string",
          "description": "Short name of the APN",
          "maxLength": 50
        },
        "ip_version": {
          "type": "integer",
          "description": "IP version used - 0: ipv4, 1: ipv6 2: ipv4+6 3: ipv4 or ipv6 4:  [3GPP TS 29.272 7.3.62]"
        },
        "pgw_address": {
          "type": "string",
          "description": "IP of the PGW",
          "maxLength": 50
        },
        "sgw_address": {
          "type": "string",
          "description": "IP of the SGW",
          "maxLength": 50
        },
        "charging_characteristics": {
          "type": "string",
          "description": "For the encoding of this information element see 3GPP TS 32.298 [9]",
          "maxLength": 4
        },
        "apn_ambr_dl": {
          "type": "integer",
          "description": "Downlink Maximum Bit Rate for this APN"
        },
        "apn_ambr_ul": {
          "type": "integer",
          "description": "Uplink Maximum Bit Rate for this APN"
        },
        "qci": {
          "type": "integer",
          "description": "QoS Class Identifier"
        },
        "arp_priority": {
          "type": "integer",
          "description": "Allocation and Retention Policy - Bearer priority level (1-15)"
        },
        "arp_preemption_capability": {
          "type": "boolean",
          "description": "Allocation and Retention Policy - Capability to Preempt resources from other Subscribers"
        },
        "arp_preemption_vulnerability": {
          "type": "boolean",
          "description": "Allocation and Retention Policy - Vulnerability to have resources Preempted by other Subscribers"
        },
        "charging_rule_list": {
          "type": "string",
          "description": "Comma separated list of predefined ChargingRules to be installed in CCA-I",
          "maxLength": 18
        },
        "nbiot": {
          "type": "boolean",
          "description": "Whether this APN provides NBIoT"
        },
        "nidd_scef_id": {
          "type": "string",
          "description": "ID of SCEF to be used for NIDD for NB-IoT",
          "maxLength": 512
        },
        "nidd_scef_realm": {
          "type": "string",
          "description": "Realm of the SCEF for NIDD for NB-IoT",
          "maxLength": 512
        },
        "nidd_mechanism": {
          "type": "integer",
          "description": "Mechanism used to transfer Non-IP-Data: SGi-BASED-DATA-DELIVERY (0) or SCEF-BASED-DATA-DELIVERY (1)"
        },
        "nidd_rds": {
          "type": "integer",
          "description": "Indicates if Reliable Data Service is enabled or disabled for this APN: DISABLED (0) or ENABLED (1)"
        },
        "nidd_preferred_data_mode": {
          "type": "integer",
          "description": "Preferred-Data-Mode: Data over User Plane Preferred (0) or Data over Control Plane Preferred (1)"
        }
      },
      "required": [
        "apn",
        "apn_ambr_dl",
        "apn_ambr_ul"
      ]
    },
    "AUC JSON": {
      "type": "object",
      "title": "AUC",
      "properties": {
        "auc_id": {
          "type": "integer",
          "description": "Unique ID of AuC entry"
        },
        "ki": {
          "type": "string",
          "description": "SIM Key - Authentication Key - Ki",
          "maxLength": 32
        },
        "opc": {
          "type": "string",
          "description": "SIM Key - Network Operators key OPc",
          "maxLength": 32
        },
        "amf": {
          "type": "string",
          "description": "Authentication Management Field",
          "maxLength": 4
        },
        "sqn": {
          "type": "integer",
          "description": "Authentication sequence number"
        },
        "iccid": {
          "type": "string",
          "description": "Integrated Circuit Card Identification Number",
          "maxLength": 20
        },
        "imsi": {
          "type": "string",
          "description": "International Mobile Subscriber Identity",
          "maxLength": 18
        },
        "batch_name": {
          "type": "string",
          "description": "Name of SIM Batch",
          "maxLength": 20
        },
        "sim_vendor": {
          "type": "string",
          "description": "SIM Vendor",
          "maxLength": 20
        },
        "esim": {
          "type": "boolean",
          "description": "Card is eSIM"
        },
        "lpa": {
          "type": "string",
          "description": "LPA URL for activating eSIM",
          "maxLength": 128
        },
        "pin1": {
          "type": "string",
          "description": "PIN1",
          "maxLength": 20
        },
        "pin2": {
          "type": "string",
          "description": "PIN2",
          "maxLength": 20
        },
        "puk1": {
          "type": "string",
          "description": "PUK1",
          "maxLength": 20
        },
        "puk2": {
          "type": "string",
          "description": "PUK2",
          "maxLength": 20
        },
        "kid": {
          "type": "string",
          "description": "KID",
          "maxLength": 20
        },
        "psk": {
          "type": "string",
          "description": "PSK",
          "maxLength": 128
        },
        "des": {
          "type": "string",
          "description": "DES",
          "maxLength": 128
        },
        "adm1": {
          "type": "string",
          "description": "ADM1",
          "maxLength": 20
        },
        "algo": {
          "type": "string",
          "description": "2G Authentication Algorithm (1 = Comp128v1, 2 = Comp128v2, 3 = Comp128v3, All Other= 3G auth with 2g keys from 3G Milenage)",
          "maxLength": 20
        },
        "misc1": {
          "type": "string",
          "description": "For misc data storage 1",
          "maxLength": 128
        },
        "misc2": {
          "type": "string",
          "description": "For misc data storage 2",
          "maxLength": 128
        },
        "misc3": {
          "type": "string",
          "description": "For misc data storage 3",
          "maxLength": 128
        },
        "misc4": {
          "type": "string",
          "description": "For misc data storage 4",
          "maxLength": 128
        }
      },
      "required": [
        "ki",
        "opc",
        "amf"
      ]
    },
    "SUBSCRIBER JSON": {
      "type": "object",
      "title": "SUBSCRIBER",
      "properties": {
        "subscriber_id": {
          "type": "integer",
          "description": "Unique ID of Subscriber entry"
        },
        "imsi": {
          "type": "string",
          "description": "International Mobile Subscriber Identity",
          "maxLength": 18
        },
        "enabled": {
          "type": "boolean",
          "description": "Subscriber enabled/disabled"
        },
        "auc_id": {
          "type": "integer",
          "description": "Reference to AuC ID defined with SIM Auth data"
        },
        "default_apn": {
          "type": "integer",
          "description": "APN ID to use for the default APN"
        },
        "apn_list": {
          "type": "string",
          "description": "Comma separated list of allowed APNs",
          "maxLength": 64
        },
        "msisdn": {
          "type": "string",
          "description": "Primary Phone number of Subscriber",
          "maxLength": 18
        },
        "ue_ambr_dl": {
          "type": "integer",
          "description": "Downlink Aggregate Maximum Bit Rate"
        },
        "ue_ambr_ul": {
          "type": "integer",
          "description": "Uplink Aggregate Maximum Bit Rate"
        },
        "nam": {
          "type": "integer",
          "description": "Network Access Mode [3GPP TS. 123 008 2.1.1.2] - 0 (PACKET_AND_CIRCUIT) or 2 (ONLY_PACKET)"
        },
        "roaming_enabled": {
          "type": "boolean",
          "description": "Whether or not to enable roaming on this subscriber"
        },
        "roaming_rule_list": {
          "type": "string",
          "description": "Comma separated list of roaming rules applicable to this subscriber",
          "maxLength": 512
        },
        "subscribed_rau_tau_timer": {
          "type": "integer",
          "description": "Subscribed periodic TAU/RAU timer value in seconds"
        },
        "serving_mme": {
          "type": "string",
          "description": "MME serving this subscriber",
          "maxLength": 512
        },
        "serving_mme_timestamp": {
          "type": "string",
          "description": "Timestamp of attach to MME",
          "format": "date-time"
        },
        "serving_mme_realm": {
          "type": "string",
          "description": "Realm of serving mme",
          "maxLength": 512
        },
        "serving_mme_peer": {
          "type": "string",
          "description": "Diameter peer used to reach MME then ; then the HSS the Diameter peer is connected to",
          "maxLength": 512
        },
        "gsup_serving_msc": {
          "type": "string",
          "description": "GSUP: MSC serving this subscriber",
          "maxLength": 512
        },
        "gsup_serving_msc_timestamp": {
          "type": "string",
          "description": "GSUP: Timestamp of attach to MSC",
          "format": "date-time"
        },
        "gsup_serving_sgsn": {
          "type": "string",
          "description": "GSUP: SGSN serving this subscriber",
          "maxLength": 512
        },
        "gsup_serving_sgsn_timestamp": {
          "type": "string",
          "description": "GSUP: Timestamp of attach to SGSN",
          "format": "date-time"
        }
      },
      "required": [
        "auc_id",
        "default_apn",
        "apn_list"
      ]
    },
    "SUBSCRIBER_ROUTING JSON": {
      "type": "object",
      "title": "SUBSCRIBER_ROUTING",
      "properties": {
        "subscriber_routing_id": {
          "type": "integer",
          "description": "Unique ID of Subscriber Routing item"
        },
        "subscriber_id": {
          "type": "integer",
          "description": "subscriber_id of the served subscriber"
        },
        "apn_id": {
          "type": "integer",
          "description": "apn_id of the target apn"
        },
        "ip_version": {
          "type": "integer",
          "description": "IP version used - 0: ipv4, 1: ipv6 2: ipv4+6 3: ipv4 or ipv6 [3GPP TS 29.272 7.3.62]"
        },
        "ip_address": {
          "type": "string",
          "description": "IP of the UE",
          "maxLength": 254
        }
      },
      "required": []
    },
    "IMS_SUBSCRIBER JSON": {
      "type": "object",
      "title": "IMS_SUBSCRIBER",
      "properties": {
        "ims_subscriber_id": {
          "type": "integer",
          "description": "Unique ID of IMS_Subscriber entry"
        },
        "msisdn": {
          "type": "string",
          "description": "Primary Phone number of Subscriber",
          "maxLength": 18
        },
        "msisdn_list": {
          "type": "string",
          "description": "Comma Separated list of additional MSISDNs for Subscriber",
          "maxLength": 1200
        },
        "imsi": {
          "type": "string",
          "description": "International Mobile Subscriber Identity",
          "maxLength": 18
        },
        "ifc_path": {
          "type": "string",
          "description": "Path to template file for the Initial Filter Criteria",
          "maxLength": 512
        },
        "pcscf": {
          "type": "string",
          "description": "Proxy-CSCF serving this subscriber",
          "maxLength": 512
        },
        "pcscf_realm": {
          "type": "string",
          "description": "Realm of PCSCF",
          "maxLength": 512
        },
        "pcscf_active_session": {
          "type": "string",
          "description": "Session Id for the PCSCF when in a call",
          "maxLength": 512
        },
        "pcscf_timestamp": {
          "type": "string",
          "description": "Timestamp of last ue attach to PCSCF",
          "format": "date-time"
        },
        "pcscf_peer": {
          "type": "string",
          "description": "Diameter peer used to reach PCSCF",
          "maxLength": 512
        },
        "xcap_profile": {
          "type": "string",
          "description": "XCAP Subscriber Profile",
          "maxLength": 12000
        },
        "sh_profile": {
          "type": "string",
          "description": "Deprecated - XCAP Subscriber Profile",
          "maxLength": 12000
        },
        "scscf": {
          "type": "string",
          "description": "Serving-CSCF serving this subscriber",
          "maxLength": 512
        },
        "scscf_timestamp": {
          "type": "string",
          "description": "Timestamp of last ue attach to SCSCF",
          "format": "date-time"
        },
        "scscf_realm": {
          "type": "string",
          "description": "Realm of SCSCF",
          "maxLength": 512
        },
        "scscf_peer": {
          "type": "string",
          "description": "Diameter peer used to reach SCSCF",
          "maxLength": 512
        },
        "sh_template_path": {
          "type": "string",
          "description": "Path to template file for the Sh Profile",
          "maxLength": 512
        }
      },
      "required": []
    },
    "TFT JSON": {
      "type": "object",
      "title": "TFT",
      "properties": {
        "tft_id": {
          "type": "integer",
          "description": "Unique ID of CHARGING_RULE entry"
        },
        "tft_group_id": {
          "type": "integer",
          "description": "Will match any TFTs using this TFT Group to form the TFT list used in the Charging Rule"
        },
        "tft_string": {
          "type": "string",
          "description": "IPFilterRules as defined in [RFC 6733] taking the format: action dir proto from src to dst",
          "maxLength": 100
        },
        "direction": {
          "type": "integer",
          "description": "Traffic Direction: 0- Unspecified, 1 - Downlink, 2 - Uplink, 3 - Bidirectional"
        }
      },
      "required": [
        "tft_group_id",
        "tft_string",
        "direction"
      ]
    },
    "CHARGING_RULE JSON": {
      "type": "object",
      "title": "CHARGING_RULE",
      "properties": {
        "charging_rule_id": {
          "type": "integer",
          "description": "Unique ID of CHARGING_RULE entry"
        },
        "rule_name": {
          "type": "string",
          "description": "Name of rule pushed to PGW (Short, no special chars)",
          "maxLength": 20
        },
        "qci": {
          "type": "integer",
          "description": "QoS Class Identifier"
        },
        "arp_priority": {
          "type": "integer",
          "description": "Allocation and Retention Policy - Bearer priority level (1-15)"
        },
        "arp_preemption_capability": {
          "type": "boolean",
          "description": "Allocation and Retention Policy - Capability to Preempt resources from other Subscribers"
        },
        "arp_preemption_vulnerability": {
          "type": "boolean",
          "description": "Allocation and Retention Policy - Vulnerability to have resources Preempted by other Subscribers"
        },
        "mbr_dl": {
          "type": "integer",
          "description": "Maximum Downlink Bitrate for traffic matching this rule"
        },
        "mbr_ul": {
          "type": "integer",
          "description": "Maximum Uplink Bitrate for traffic matching this rule"
        },
        "gbr_dl": {
          "type": "integer",
          "description": "Guaranteed Downlink Bitrate for traffic matching this rule"
        },
        "gbr_ul": {
          "type": "integer",
          "description": "Guaranteed Uplink Bitrate for traffic matching this rule"
        },
        "tft_group_id": {
          "type": "integer",
          "description": "Will match any TFTs using this TFT Group to form the TFT list used in the Charging Rule"
        },
        "precedence": {
          "type": "integer",
          "description": "Precedence of this rule, allows rule to override or be overridden by a higher priority rule"
        },
        "rating_group": {
          "type": "integer",
          "description": "Rating Group in OCS / OFCS that traffic matching this rule will be charged under"
        }
      },
      "required": [
        "mbr_dl",
        "mbr_ul",
        "gbr_dl",
        "gbr_ul"
      ]
    },
    "EIR JSON": {
      "type": "object",
      "title": "EIR",
      "properties": {
        "eir_id": {
          "type": "integer",
          "description": "Unique ID of EIR entry"
        },
        "imei": {
          "type": "string",
          "description": "Exact IMEI or Regex to match IMEI (Depending on regex_mode value)",
          "maxLength": 60
        },
        "imsi": {
          "type": "string",
          "description": "Exact IMSI or Regex to match IMSI (Depending on regex_mode value)",
          "maxLength": 60
        },
        "regex_mode": {
          "type": "integer",
          "description": "0 - Exact Match mode, 1 - Regex Mode"
        },
        "match_response_code": {
          "type": "integer",
          "description": "0 - Whitelist, 1 - Blacklist, 2 - Greylist"
        }
      },
      "required": []
    },
    "SUBSCRIBER_ATTRIBUTES JSON": {
      "type": "object",
      "title": "SUBSCRIBER_ATTRIBUTES",
      "properties": {
        "subscriber_attributes_id": {
          "type": "integer",
          "description": "Unique ID of Attribute"
        },
        "subscriber_id": {
          "type": "integer",
          "description": "Reference to Subscriber ID defined within Subscriber Section"
        },
        "key": {
          "type": "string",
          "description": "Arbitrary key",
          "maxLength": 60
        },
        "value": {
          "type": "string",
          "description": "Arbitrary value",
          "maxLength": 12000
        }
      },
      "required": [
        "subscriber_id"
      ]
    },
    "PCRF_Rule": {
      "required": [
        "apn_id",
        "charging_rule_id",
        "imsi"
      ],
      "properties": {
        "imsi": {
          "type": "string",
          "description": "IMSI of Subscriber to push rule to"
        },
        "apn_id": {
          "type": "integer",
          "description": "APN_ID of APN to push rule on"
        },
        "charging_rule_id": {
          "type": "integer",
          "description": "charging_rule_id to push"
        }
      },
      "type": "object"
    },
    "PCRF_PCSCF_Restoration_Subscriber": {
      "required": [
        "imsi",
        "msisdn"
      ],
      "properties": {
        "imsi": {
          "type": "string",
          "description": "IMSI of IMS Subscriber"
        },
        "msisdn": {
          "type": "string",
          "description": "MSISDN of IMS Subscriber"
        }
      },
      "type": "object"
    },
    "PCRF_PCSCF_Restoration": {
      "required": [
        "pcscf"
      ],
      "properties": {
        "pcscf": {
          "type": "string",
          "description": "Serving PCSCF to send restoration for"
        }
      },
      "type": "object"
    },
    "EMERGENCY_SUBSCRIBER JSON": {
      "type": "object",
      "title": "EMERGENCY_SUBSCRIBER",
      "properties": {
        "emergency_subscriber_id": {
          "type": "integer",
          "description": "Unique ID of EMERGENCY_SUBSCRIBER entry"
        },
        "imsi": {
          "type": "string",
          "description": "International Mobile Subscriber Identity",
          "maxLength": 18
        },
        "serving_pgw": {
          "type": "string",
          "description": "PGW serving this subscriber",
          "maxLength": 512
        },
        "serving_pgw_timestamp": {
          "type": "string",
          "description": "Timestamp of Gx CCR",
          "maxLength": 512
        },
        "serving_pcscf": {
          "type": "string",
          "description": "PCSCF serving this subscriber",
          "maxLength": 512
        },
        "serving_pcscf_timestamp": {
          "type": "string",
          "description": "Timestamp of Rx Media AAR",
          "maxLength": 512
        },
        "gx_origin_realm": {
          "type": "string",
          "description": "Origin Realm of the Gx CCR",
          "maxLength": 512
        },
        "gx_origin_host": {
          "type": "string",
          "description": "Origin host of the Gx CCR",
          "maxLength": 512
        },
        "rat_type": {
          "type": "string",
          "description": "Radio access technology type that the emergency subscriber has used",
          "maxLength": 512
        },
        "ip": {
          "type": "string",
          "description": "IP of the emergency subscriber",
          "maxLength": 512
        },
        "access_network_gateway_address": {
          "type": "string",
          "description": "ANGW emergency that the subscriber has used",
          "maxLength": 512
        },
        "access_network_charging_address": {
          "type": "string",
          "description": "AN Charging Address that the emergency subscriber has used",
          "maxLength": 512
        }
      },
      "required": []
    },
    "GeoRed": {
      "required": [
        "imsi"
      ],
      "properties": {
        "imsi": {
          "type": "string",
          "description": "IMSI of Subscriber to Update"
        },
        "serving_mme": {
          "type": "string",
          "description": "MME serving this subscriber"
        },
        "serving_mme_realm": {
          "type": "string",
          "description": "Realm of serving mme"
        },
        "serving_mme_peer": {
          "type": "string",
          "description": "Diameter peer used to reach MME then ; then the HSS the Diameter peer is connected to"
        },
        "serving_mme_timestamp": {
          "type": "string",
          "description": "Timestamp of attach to MME"
        },
        "serving_apn": {
          "type": "string",
          "description": "Access Point Name of APN"
        },
        "pcrf_session_id": {
          "type": "string",
          "description": "Session ID from the PCRF"
        },
        "pcscf": {
          "type": "string",
          "description": "Proxy-CSCF serving this subscriber"
        },
        "pcscf_realm": {
          "type": "string",
          "description": "Realm of PCSCF"
        },
        "pcscf_peer": {
          "type": "string",
          "description": "Diameter peer used to reach PCSCF"
        },
        "pcscf_timestamp": {
          "type": "string",
          "description": "Timestamp of last ue attach to PCSCF"
        },
        "pcscf_active_session": {
          "type": "string",
          "description": "Session Id for the PCSCF when in a call"
        },
        "subscriber_routing": {
          "type": "string",
          "description": "IP Address allocated to the UE"
        },
        "serving_pgw": {
          "type": "string",
          "description": "PGW serving this subscriber"
        },
        "serving_pgw_realm": {
          "type": "string",
          "description": "Realm of serving PGW"
        },
        "serving_pgw_peer": {
          "type": "string",
          "description": "Diameter peer used to reach PGW"
        },
        "serving_pgw_timestamp": {
          "type": "string",
          "description": "Timestamp of attach to PGW"
        },
        "scscf": {
          "type": "string",
          "description": "Serving-CSCF serving this subscriber"
        },
        "scscf_realm": {
          "type": "string",
          "description": "Realm of SCSCF"
        },
        "scscf_peer": {
          "type": "string",
          "description": "Diameter peer used to reach SCSCF"
        },
        "scscf_timestamp": {
          "type": "string",
          "description": "Timestamp of last ue attach to SCSCF"
        },
        "imei": {
          "type": "string",
          "description": "Exact IMEI or Regex to match IMEI (Depending on regex_mode value)"
        },
        "match_response_code": {
          "type": "string",
          "description": "0 - Whitelist, 1 - Blacklist, 2 - Greylist"
        },
        "emergency_subscriber_id": {
          "type": "string",
          "description": "Unique ID of EMERGENCY_SUBSCRIBER entry"
        },
        "emergency_subscriber_imsi": {
          "type": "string",
          "description": "International Mobile Subscriber Identity"
        },
        "emergency_subscriber_serving_pgw": {
          "type": "string",
          "description": "PGW serving this subscriber"
        },
        "emergency_subscriber_serving_pgw_timestamp": {
          "type": "string",
          "description": "Timestamp of Gx CCR"
        },
        "emergency_subscriber_serving_pcscf": {
          "type": "string",
          "description": "PCSCF serving this subscriber"
        },
        "emergency_subscriber_serving_pcscf_timestamp": {
          "type": "string",
          "description": "Timestamp of Rx Media AAR"
        },
        "emergency_subscriber_gx_origin_realm": {
          "type": "string",
          "description": "Origin Realm of the Gx CCR"
        },
        "emergency_subscriber_gx_origin_host": {
          "type": "string",
          "description": "Origin host of the Gx CCR"
        },
        "emergency_subscriber_rat_type": {
          "type": "string",
          "description": "Radio access technology type that the emergency subscriber has used"
        },
        "emergency_subscriber_ip": {
          "type": "string",
          "description": "IP of the emergency subscriber"
        },
        "emergency_subscriber_access_network_gateway_address": {
          "type": "string",
          "description": "ANGW emergency that the subscriber has used"
        },
        "emergency_subscriber_access_network_charging_address": {
          "type": "string",
          "description": "AN Charging Address that the emergency subscriber has used"
        },
        "emergency_subscriber_delete": {
          "type": "boolean",
          "description": "Whether to delete the emergency subscriber on receipt"
        }
      },
      "type": "object"
    },
    "CLR": {
      "required": [
        "DestinationRealm",
        "cancellationType",
        "diameterPeer",
        "immediateReattach"
      ],
      "properties": {
        "DestinationRealm": {
          "type": "string",
          "description": "Destination Realm to set"
        },
        "DestinationHost": {
          "type": "string",
          "description": "Destination Host (Optional)"
        },
        "cancellationType": {
          "type": "integer",
          "description": "Cancellation Type as per 3GPP TS 29.272 / 7.3.24",
          "default": 2
        },
        "diameterPeer": {
          "type": "string",
          "description": "Diameter peer to send to"
        },
        "immediateReattach": {
          "type": "boolean",
          "description": "Whether or not the UE should reattach immediately",
          "default": true
        }
      },
      "type": "object"
    },
    "ROAMING_RULE JSON": {
      "type": "object",
      "title": "ROAMING_RULE",
      "properties": {
        "roaming_rule_id": {
          "type": "integer",
          "description": "Unique ID of ROAMING_RULE entry"
        },
        "roaming_network_id": {
          "type": "integer",
          "description": "ID of the roaming network to apply the rule for"
        },
        "allow": {
          "type": "boolean",
          "description": "Whether to allow outbound roaming on the network"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the rule is enabled"
        }
      },
      "required": []
    },
    "ROAMING_NETWORK JSON": {
      "type": "object",
      "title": "ROAMING_NETWORK",
      "properties": {
        "roaming_network_id": {
          "type": "integer",
          "description": "Unique ID of ROAMING_NETWORK entry"
        },
        "name": {
          "type": "string",
          "description": "Name of the roaming network",
          "maxLength": 512
        },
        "preference": {
          "type": "integer",
          "description": "Preference of the network. Lower numbers are chosen first."
        },
        "mcc": {
          "type": "string",
          "description": "MCC to apply the roaming rule for",
          "maxLength": 100
        },
        "mnc": {
          "type": "string",
          "description": "3 digit MNC to apply the roaming rule for",
          "maxLength": 100
        }
      },
      "required": []
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  }
}
